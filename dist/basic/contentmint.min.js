var Cmint=Cmint||function(){"use strict";return{App:null,AppFn:{},Bus:new Vue,Drag:{},Editor:{config:null,types:{}},Hooks:{},Fields:{UIDS:{}},Settings:{},Instance:{Components:{},Data:null,Editor:{Config:null,PostProcesses:[],Types:{}},Fields:{List:{},Processes:{}},Hooks:{Local:{},Global:{}},Menus:{},Templates:{},Toolbar:[]},Sync:{},Ui:{Toolbar:[],Actionbar:[],componentList:null},Util:{}}}();Cmint.Settings={config:{debug:!0,tests:!0},name:{component:"Component",context:"Context",contextualize:"Contextualized",dataHook:"data-hook",dataContext:"data-context",dataDisable:"data-disable",dataEdit:"data-edit",dataTemp:"data-temp",placeholder:"cmint-placeholder"},class:{component:".Component",context:".Context",categories:".category-container",fieldchoice:".field-choice-wrap",dropdown:".dropdown",placeholder:".cmint-placeholder",notification:".cmint-notification"},id:{components:"#Components",stage:"#Stage",actionbar:"#ActionBar"},attr:{dataContext:"[data-context]",dataHook:"[data-hook]",dataDisable:"[data-disable]",dataEdit:"[data-edit]",dataTemp:"[data-temp]"}},Object.defineProperties(Vue.prototype,{$bus:{get:function(){return Cmint.Bus}}}),Cmint.Bus.setSelectedCategory=function(t){Cmint.Bus.$on("selectedCategory",function(n){t.selectedCategory=n,Cmint.Util.debug('selected the category "'+n+'"')})},Cmint.Util.contains=function(t,n){return t.contains?t!=n&&t.contains(n):!!(16&t.compareDocumentPosition(n))},Cmint.Util.copyObject=function(t){return JSON.parse(JSON.stringify(t))},Cmint.Util.debug=function(t){Cmint.Settings.config.debug&&console.log("DEBUG: "+t)},Cmint.Util.random=function(t,n){return Math.floor(Math.random()*(n-t+1)+t)},Cmint.Util.Tests=[],Cmint.Util.test=function(t,n){Cmint.Util.Tests.push({name:t,fn:n})},Cmint.Util.formatTestResult=function(t){return"object"==typeof t?JSON.stringify(t):t},Cmint.Util.runTests=function(){Cmint.Settings.config.tests&&Cmint.Util.Tests.forEach(function(t){var n=t.fn();if(n[0])console.log("TEST: "+t.name+" -- Passed");else{var e=Cmint.Util.formatTestResult(n[1]),i=Cmint.Util.formatTestResult(n[2]);console.error("TEST: "+t.name+" -- Failed"),console.error("=> expected "+e),console.error("=> returned "+i)}})},Cmint.Util.uid=function(t){for(var n="ID-",e=1;e<=t;)n+=e%2==0?String.fromCharCode(Cmint.Util.random(65,90)):String.fromCharCode(Cmint.Util.random(48,57)),e++;return n},Cmint.Sync.fn=function(){function t(t,n){var e=null;return $(n).children().each(function(n){this===t&&(e=n)}),e}return Cmint.Util.test("Cmint.Sync.fn.getContainerPosition",function(){var n=$("<div></div>").append("<span></span>"),e=$("<p></p>");return n.append(e),1===t(e[0],n)?"Passed":"Failed"}),{getContainerPosition:t}}(),Cmint.Sync.getStagePosition=function(t,n){var e,i,o;return n=n||[],e=$(t).closest(Cmint.Settings.class.context),i=$(t).parent().closest(Cmint.Settings.class.component),name=e.attr(Cmint.Settings.name.dataContext),o=Cmint.Sync.fn.getContainerPosition(t,e),n.unshift(o),n.unshift(name),i.length?n=Cmint.Sync.getStagePosition(i[0],n):n},Cmint.Util.test("Cmint.Sync.getStagePosition",function(){var t=$('<div class="'+Cmint.Settings.name.context+'" '+Cmint.Settings.name.dataContext+'="stage"></div>'),n=$('<div class="'+Cmint.Settings.name.component+'"></div>'),e=$('<div class="'+Cmint.Settings.name.context+'" '+Cmint.Settings.name.dataContext+'="foo"></div>'),i=$('<div class="'+Cmint.Settings.name.component+'"></div>');n.append(e),e.append(i),t.append(n);var o=["stage",0,"foo",0],s=Cmint.Sync.getStagePosition(i[0]);return[_.isEqual(o,s),o,s]}),Cmint.Sync.getComponentData=function(t,n){var e=Cmint.Util.copyObject(n),i=Cmint.Util.copyObject(t);return i.shift(),i.forEach(function(t,n){e="string"==typeof t?e.contexts[t]:e[t]}),e},Cmint.Util.test("Cmint.Sync.getComponentData",function(){var t={foo:[null,{contexts:{bar:[null,{baz:"tada"}]}}]},n=["foo",1,"bar",1],e={baz:"tada"},i=Cmint.Sync.getComponentData(n,t.foo);return[_.isEqual(e,i),e,i]}),Cmint.Sync.getVmContextData=function(t,n){var e,i=Cmint.Util.copyObject(t),o=n;return i.shift(),i.forEach(function(t,n){n===i.length-1?e={context:o,index:t}:("string"==typeof t&&(o=o.contexts),o=o[t])}),e},Cmint.Util.test("Cmint.Sync.getVmContextData",function(){var t={foo:[null,{contexts:{bar:[null,{baz:"tada"}]}}]},n=["foo",1,"bar",1],e={context:[null,{baz:"tada"}],index:1},i=Cmint.Sync.getVmContextData(n,t.foo);return[_.isEqual(i,e),e,i]}),Cmint.Sync.insertVmContextData=function(t,n,e){var i=e,o=Cmint.Sync.getVmContextData(t,i);return o.context.splice(o.index,0,n),e},Cmint.Util.test("Cmint.Sync.insertVmContextData",function(){var t={foo:[{contexts:{biz:{bal:"boo"}}},{contexts:{bar:[{buz:"byz"},{baz:"tada"}]}}]},n=["foo",1,"bar",2],e={beez:"bundle"},i=[{contexts:{biz:{bal:"boo"}}},{contexts:{bar:[{buz:"byz"},{baz:"tada"},{beez:"bundle"}]}}],o=Cmint.Sync.insertVmContextData(n,e,t.foo);return[_.isEqual(i,o),i,o]}),Cmint.Sync.rearrangeVmContextData=function(t,n){n.context.splice(n.index,0,t.context.splice(t.index,1)[0]),Cmint.Util.debug("rearranging Vm context data")},Cmint.Sync.removeVmContextData=function(t){t.context.splice(t.index,1)},Cmint.createComponent=function(t){t.template||console.error("All components need a template"),t.config||console.error("All components need config options"),Cmint.Instance.Components[t.config.name]?console.error('Component "'+t.config.name+'" already exists'):(t.config.index||(t.config.index=[]),Cmint.Instance.Components[t.config.name]=t.config,Vue.component(t.config.name,{props:["config"],template:t.template}))},Cmint.createComponentHook=function(t,n,e){Cmint.Instance.Hooks[n][t]?console.error(n+' component hook "'+t+'" already exists'):Cmint.Instance.Hooks[n][t]=e},Cmint.createEditorPostProcess=function(t){Cmint.Instance.Editor.PostProcesses.push(t)},Cmint.createField=function(t){t.name||console.error("You must give all created fields a name"),t.config.type||console.error("You must give all created fields a field type"),t.config.label||console.error("You must give all created fields a label"),t.config.input||"field-choice"!==!t.config.type||console.error("You must associate all created fields with an input"),Cmint.Instance.Fields.List[t.name]?console.error('Field "'+t.name+'" already exists'):Cmint.Instance.Fields.List[t.name]=t.config},Cmint.createFieldProcess=function(t,n){Cmint.Instance.Fields.Processes[t]?console.error('Field process "'+t+'" already exists'):Cmint.Instance.Fields.Processes[t]=n},Cmint.createMenu=function(t,n){Cmint.Instance.Menus[t]?console.error('Menu "'+t+'" already exists'):Cmint.Instance.Menus[t]=n},Cmint.createOnSaveHook=function(t){Cmint.Hooks.onSaveHook=t},Cmint.createTemplate=function(t,n){Cmint.Instance.Templates[t]?console.error('Template "'+t+'" already exists'):(n.path||console.error('Need path for template "'+t+'"'),n.components||console.error('No components defined for template "'+t+'"'),Cmint.Instance.Templates[t]=n)},Cmint.createToolbarButton=function(t){Cmint.Ui.Toolbar.push(t)},Cmint.createToolbarButton({text:"Save",btnClasses:{"toolbar-save":!0},iconClasses:{fa:!0,"fa-save":!0},callback:function(t){Cmint.App.save()}}),Cmint.createToolbarButton({text:"Context",btnClasses:{"toolbar-context":!0,active:!1},iconClasses:{fa:!0,"fa-object-ungroup":!0},callback:function(t,n){n.btnClasses.active=!n.btnClasses.active,Cmint.Bus.$emit("contextualize"),Cmint.Util.debug("Contextualizing stage components")}}),Cmint.createToolbarButton({text:"Undo",btnClasses:{"toolbar-undo":!0},iconClasses:{fa:!0,"fa-undo":!0},disable:null,callback:function(){Cmint.App.undo()}}),Cmint.getFullMarkup=function(){return Cmint.App.templateMarkup.replace(/\{\{\s*stage\s*\}\}/,Cmint.App.markup)},Cmint.getMarkup=function(){return Cmint.App.stage.map(function(t){return t.markup}).join("\n")},Vue.component("comp",{props:["config","tag"],render:function(t){var n={},e=this.config.tags&&this.config.tags.root?this.config.tags.root:"div";return e=this.tag?this.tag:e,n[Cmint.Settings.name.component]=!0,n[Cmint.Settings.name.contextualize]=this.contextualize,t(e,{class:n},this.$slots.default)},data:function(){return{environment:null}},computed:{contextualize:function(){return!!Cmint.App&&Cmint.App.contextualize}},methods:{run:function(t){var n=this,e=$(n.$el);n.environment=e.closest(Cmint.Settings.id.components).length?"components":"stage",n.config.index=Cmint.Sync.getStagePosition(n.$el),n.config.fields&&Cmint.Fields.assignUid(n),Cmint.AppFn.compSetup(n.config),Cmint.Bus.$on("deleteCustomComponent",function(t){n.config.custom&&n.config.display===t&&(n.config.custom=!1,n.config.display=n.config.originalDisplay,n.config.category=n.config.originalCategory)}),Cmint.Hooks.runComponentHooks("editing",n.$el,n.config),Cmint.Editor.init(n),Cmint.Ui.actionbarHandler(n),setTimeout(function(){Cmint.AppFn.getComponentMarkup(n)},100),Cmint.Util.debug(t+' <comp> "'+n.config.name+'"')}},created:function(){Cmint.Fields.setOutputWatch(this)},mounted:function(){this.run("mounted")},updated:function(){this.run("updated")}}),Vue.component("context",{props:["tag","insert","contexts","thumbnails"],render:function(t){var n,e={},i=this.tag||"div",o=this.insert||"div";return e[Cmint.Settings.name.context]=!0,n=this.thumbnails?this.contexts.map(function(n){return t("div",{class:{thumbnail:!0}},[t("span",{class:{"thumbnail-name":!0}},[n.display]),t("div",{class:{"thumbnail-component":!0}},[t("div",{class:{"thumbnail-scale-wrap":!0}},[t(n.name,{props:{config:n}})])])])}):this.contexts.map(function(n){return t(n.name,{props:{config:n},key:n.id})}),this.contexts.length||(n=[t(o,{class:{"context-insert":!0}},["Drag components here"])]),t(i,{class:e},n)}}),Vue.component("toolbar",{props:["changes","user","name"],template:'        <div id="Toolbar" :class="{active:isActive}">            <div v-for="btn in toolbarButtons" class="cmint-btn-toolbar">                <button :class="btn.btnClasses"                    @click="btn.callback($el, btn)"                    :'+Cmint.Settings.name.dataDisable+'="btn.hasOwnProperty(\'disable\') || null">                    <i :class="btn.iconClasses"></i><span>{{ btn.text }}</span>                </button>            </div>            <div id="EditorToolbar"></div>            <div class="right">                <span>{{ name }}</span><a :href="\'/\' + user">{{ user }}</a>            </div>            <div class="cmint-toolbar-handle" @click="toggle">                <i :class="handleClasses"></i>            </div>        </div>',data:function(){return{toolbarButtons:Cmint.Ui.Toolbar,isActive:!0}},computed:{handleClasses:function(){var t={fa:!0};return this.isActive?t["fa-close"]=!0:t["fa-cog"]=!0,t}},methods:{toggle:function(){this.isActive=!this.isActive,this.$bus.$emit("toggleToolbar",this.isActive)},disable:function(t){var n=$(this.$el).find(Cmint.Settings.attr.dataDisable);t?n.attr("disabled",!0):n.removeAttr("disabled")}},mounted:function(){var t=this;t.disable(!0),t.$bus.$on("toolbarDisabler",function(n){t.disable(n)}),t.$bus.$on("showToolbar",function(){t.isActive=!0,this.$bus.$emit("toggleToolbar",!0)}),t.$bus.$on("closeToolbar",function(){t.toggle()}),t.$bus.$on("toggleSidebar",function(n){n&&(t.isActive=!0)})}}),Vue.component("sidebar",{props:["components"],template:'        <aside id="Sidebar" :class="{active:isActive}">            <div class="cmint-sidebar-handle" @click="toggle">                <i :class="handleClasses"></i>            </div>            <div class="sidebar-sub">                <categories :components="components"></categories>            </div>            <div class="sidebar-main">                <context id="Components"                    data-context="components"                    :thumbnails="true"                    :contexts="componentList"></context>            </div>        </aside>',data:function(){return{isActive:!0,componentList:this.components}},computed:{handleClasses:function(){var t={fa:!0};return this.isActive?t["fa-close"]=!0:t["fa-bars"]=!0,t}},methods:{toggle:function(){this.isActive=!this.isActive,this.$bus.$emit("toggleSidebar",this.isActive)},updateThumbnails:function(){Cmint.Ui.refreshComponentList()}},mounted:function(){var t=this;t.handleClasses["fa-close"]=!0,Cmint.Ui.componentList=t.componentList,t.$bus.$on("filteredCategories",function(n){t.componentList=n,Cmint.Ui.componentList=t.componentList}),t.$bus.$on("updateComponentList",function(n){t.componentList.push(n)}),t.$bus.$on("toggleToolbar",function(n){n||(t.isActive=!1)}),Cmint.Bus.$on("openSidebar",function(){t.isActive=!0}),this.updateThumbnails()},updated:function(){this.updateThumbnails()}}),Vue.component("categories",{props:["components"],template:'        <div :class="container">            <button class="category-selected" @click="toggle = !toggle">                <span>{{ selected }}</span><i :class="chevron"></i></button>            <div class="category-list">                <button class="category-option"                    @click="select()">All</button>                <button class="category-option"                    v-for="cat in categories"                    @click="select(cat)"                    >{{ cat }}</button>            </div>        </div>',data:function(){return{toggle:!1,selected:"All"}},methods:{select:function(t){this.selected=t||"All",this.toggle=!1;var n=this.components;"All"!==this.selected&&(n=this.components.filter(function(n){return n.category===t})),this.$bus.$emit("selectedCategory",t),this.$bus.$emit("filteredCategories",n)}},computed:{container:function(){return{"category-container":!0,active:this.toggle}},chevron:function(){return{fa:!0,"fa-chevron-left":!this.toggle,"fa-chevron-down":this.toggle}},categories:function(){var t=this.components.map(function(t){return t.category});return t.filter(function(n,e){return t.indexOf(n)===e}).sort()}},mounted:function(){var t=this;this.$bus.$on("closeCategoryList",function(){t.toggle=!1}),Cmint.Bus.$on("selectCategory",function(n){n=n||t.selected,t.select(n)})}}),Vue.component("custom",{template:'        <div :class="classes">            <div class="custom-heading">                <button class="custom-done" @click="closeCustom"><i class="fa fa-chevron-left"></i>Done</button>                <span>Custom Component</span>            </div>            <div class="custom-form">                <label>Name</label>                <input type="text" v-model="name" placeholder="Component name" :disabled="isCustom || null" />                <div :class="{ nameError: true, show: hasError }" v-text="nameError"></div>                <label>Category</label>                <input type="text" v-model="category" placeholder="Category (Default \'Custom\')" :disabled="isCustom || null" />                <button v-if="!isCustom" class="add-btn" @click="addCustom">Save Component</button>                <button v-if="isCustom" class="delete-btn" @click="deleteCustom">Delete</button>            </div>        </div>',data:function(){return{name:"",category:"",nameError:!1,hasError:!1,isActive:!1,isCustom:!1}},computed:{classes:function(){return{"custom-add-wrap":!0,cmint:!0,active:this.isActive}}},methods:{addCustom:function(){Cmint.AppFn.createCustomComponent(this)},deleteCustom:function(){Cmint.AppFn.deleteCustomComponent(this)},closeCustom:function(){Cmint.Bus.$emit("closeCustomModal")}},mounted:function(){var t=this;Cmint.Bus.$on("callCustomModal",function(){Cmint.Bus.$emit("toggleOverlay",!0),t.isCustom=Cmint.App.activeComponent.config.custom,t.name=t.isCustom?Cmint.App.activeComponent.config.display:"",t.category=t.isCustom?Cmint.App.activeComponent.config.category:"",t.isActive=!0}),Cmint.Bus.$on("closeCustomModal",function(){Cmint.Bus.$emit("toggleOverlay",!1),t.isActive=!1,t.name="",t.category=""})}}),Vue.component("actionbar",{template:'        <div id="ActionBar" :style="css" :class="{active: isActive, cmint: true}">            <button class="actionbar-copy" @click="copyComponent">                <i class="fa fa-clone"></i></button>            <button class="actionbar-trash" @click="trashComponent">                <i class="fa fa-trash-o"></i></button>            <button :class="{\'actionbar-new\':true, custom: isCustom}" @click="callCustomModal">                <i :class="customClasses"></i></button>            <button :class="{\'actionbar-fields\': true, hidden: noFields}" @click="callFields">                <i class="fa fa-cog"></i></button>        </div>',data:function(){return{top:"20px",left:"20px",display:"block",isActive:!1,noFields:!0,newComp:!1,focused:!1,isCustom:!1}},computed:{css:function(){return{display:this.display,top:this.top,left:this.left,position:"absolute"}},customClasses:function(){return{fa:!0,"fa-plus":!this.isCustom,"fa-star":this.isCustom}}},methods:{trashComponent:function(){Cmint.Ui.removeComponent()},copyComponent:function(){Cmint.Ui.copyComponent()},callCustomModal:function(){Cmint.Bus.$emit("callCustomModal")},callFields:function(){Cmint.Bus.$emit("callComponentFields"),Cmint.Bus.$emit("toggleOverlay",!0),this.$bus.$emit("closeActionBar")}},mounted:function(){var t=this;this.$bus.$on("getComponentCoordinates",function(n,e){t.top=n.top,t.left=n.left,t.hasFields=e.fields,t.display="block"}),this.$bus.$on("openActionBar",function(n){t.noFields=void 0===n.config.fields,t.isActive=!0,t.isCustom=Cmint.App.activeComponent.config.custom;var e=1*t.left.replace("px",""),i=1*t.top.replace("px","");e<48&&(t.left="48px"),i<45&&(t.top="45px"),Cmint.Util.debug('active component is "'+Cmint.App.activeComponent.config.name+'"')}),this.$bus.$on("closeActionBar",function(){t.isActive&&(t.isActive=!1,t.newComp=!1,setTimeout(function(){t.display="none"},200))}),this.$bus.$on("closeNewComp",function(){t.newComp=!1})}}),Vue.component("content-template",{props:["fields-component","template","stage"],template:"",data:function(){return{sidebarOpen:!0,toolbarOpen:!0,scale:!1}},computed:{margin:function(){return{"margin-right":this.sidebarOpen?"360px":"0","margin-top":this.toolbarOpen?"40px":"0"}},scaleClass:function(){return{scale:this.scale}}},created:function(){var t='<div id="Template" :style="margin" :class="scaleClass">';t+=this.template.replace(/\{\{\s*stage\s*\}\}/,'<context id="Stage" :contexts="stage" data-context="stage"></context>'),t+="</div>",this.$options.template=t},mounted:function(){var t=this;Cmint.Bus.$on("toggleSidebar",function(n){n?(t.sidebarOpen=!0,t.toolbarOpen=!0):t.sidebarOpen=!1}),Cmint.Bus.$on("toggleToolbar",function(n){n?t.toolbarOpen=!0:(t.toolbarOpen=!1,t.sidebarOpen=!1)}),Cmint.Bus.$on("toggleOverlay",function(n){t.scale=n}),Cmint.Bus.$on("moveTemplateLeft",function(){t.sidebarOpen=!0,t.toolbarOpen=!0})}}),Vue.component("overlay",{template:'<div id="Overlay"></div>',data:function(){return{isActive:!1,isVisible:!1}},mounted:function(){var t=$(this.$el);Cmint.Bus.$on("toggleOverlay",function(n){n?(t.addClass("active"),setTimeout(function(){t.addClass("visible")},20)):(t.removeClass("visible"),setTimeout(function(){t.removeClass("active")},200))})}}),Cmint.Editor.config={inline:!0,menubar:!1,insert_toolbar:!1,force_hex_style_colors:!0,fixed_toolbar_container:"#EditorToolbar",plugins:"link lists paste textpattern autolink charmap",toolbar:"bold italic alignleft aligncenter link bullist numlist superscript charmap",forced_root_block:"div"},Cmint.Editor.init=function(t){if(t.config.content){var n=$(t.$el).find(Cmint.Settings.attr.dataEdit);$(t.$el).attr(Cmint.Settings.name.dataEdit)&&n.push($(t.$el)),n.each(function(){var n,e=Cmint.Util.copyObject(Cmint.Editor.config),i=Cmint.Util.uid(10),o=$(this),s=o.attr(Cmint.Settings.name.dataEdit);o.html(t.config.content[s]),"components"!==t.environment&&(o.attr("data-temp",i),e.selector='[data-temp="'+i+'"]',e.init_instance_callback=function(t){n=t.getContent(),t.on("PostProcess",function(t){Cmint.Instance.Editor.PostProcesses.forEach(function(n){n(t)})})},e.setup=function(e){t&&e.on("Change keyup",_.debounce(function(){t&&(t.config.content[s]=e.getContent(),Cmint.Util.debug('updated content "'+s+'" for '+t.config.name))})),e.on("focus",function(){Cmint.Bus.$emit("showToolbar"),t.config.content[s]=e.getContent(),n=e.getContent()}),e.on("blur",function(){t.config.content&&t.config.content[s]!==n&&(Cmint.Bus.$emit("fieldProcessing"),Vue.nextTick(Cmint.App.refresh),Vue.nextTick(Cmint.App.snapshot),Cmint.App.save())}),o.removeAttr("data-temp")},tinymce.init(e))})}},Cmint.Ui.actionbarHandler=function(t){if("components"!==t.environment){var n=t.$el,e=$(n);e.unbind(),e.click(function(i){var o=$(i.target).closest(Cmint.Settings.class.component);o[0]!==n||o.hasClass("active")||(Cmint.App.activeComponent=t,setTimeout(function(){var n=e.offset(),i={};i.top=n.top+"px",i.left=n.left+"px",i.handle=n.left+e.width()+"px",$("#ActionBar.active").length?(Cmint.Bus.$emit("closeActionBar"),setTimeout(function(){Cmint.Bus.$emit("getComponentCoordinates",i,t),setTimeout(function(){Cmint.Bus.$emit("openActionBar",t)},100)},200)):(Cmint.Bus.$emit("getComponentCoordinates",i,t),setTimeout(function(){Cmint.Bus.$emit("openActionBar",t)},100))},50))})}},Cmint.Ui.callCustomModal=function(t){var n=Cmint.App.activeComponent,e=Cmint.Sync.getVmContextData(n.config.index,Cmint.App.stage),i=Cmint.Util.copyObject(e.context[e.index]);t.focused=i,t.newComp=!t.newComp},Cmint.Ui.componentDragIconHandler=function(t){var n=$(t.$el),e=n.offset(),i=n.width();n.unbind("mouseenter mouseleave"),n.on("mouseenter",function(){$(this).addClass("maybeActive")}),n.on("mouseleave",function(){$(this).removeClass("maybeActive")}),$(document).on("mousemove",function(t){var o=t.pageX,s=t.pageY,a=(n.hasClass("maybeActive"),n.hasClass("draggable")),c=o>e.left+i-25&&o<e.left+i+5&&s>e.top-5&&s<e.top+25;c&&!a?n.addClass("draggable"):!c&&a&&n.removeClass("draggable")})},Cmint.Ui.contextualize=function(){Cmint.Bus.$on("contextualize",function(){Cmint.App.contextualize=!Cmint.App.contextualize})},Cmint.Ui.copyComponent=function(){var t=Cmint.App.activeComponent,n=Cmint.Sync.getVmContextData(t.config.index,Cmint.App.stage),e=Cmint.Util.copyObject(n.context[n.index]);e.copy=!0,n.context.splice(n.index+1,0,e),Vue.nextTick(Cmint.Drag.updateContainers),Vue.nextTick(Cmint.App.snapshot),e.fields&&(Cmint.App.fieldsMountOnly=!0,Cmint.App.fieldsComponent=e,setTimeout(function(){Cmint.App.fieldsMountOnly=!1,Cmint.App.fieldsComponent=null},20)),Cmint.Bus.$emit("closeActionBar"),Cmint.Util.debug("copied "+t.config.name+"["+t.config.index+"]"),Cmint.App.save()},Cmint.Ui.documentHandler=function(){$(document).on({click:function(t){var n=$(t.target),e=n.closest(Cmint.Settings.class.component).length,i=n.closest(Cmint.Settings.id.stage).length,o=n.closest(Cmint.Settings.id.actionbar).length,s=n.closest(Cmint.Settings.class.categories).length,a=n.closest(Cmint.Settings.class.fieldchoice).length,c=n.closest(Cmint.Settings.class.dropdown).length;if(e&&i){var l=n.closest(Cmint.Settings.class.component);l.hasClass("active")||($(Cmint.Settings.class.component+".active").removeClass("active"),l.addClass("active")),$(".mce-edit-focus").each(function(){$(this).closest(Cmint.Settings.class.component).hasClass("active")||$(this).blur()})}else $(Cmint.Settings.class.component+".active").removeClass("active"),!o&&Cmint.App.activeComponent&&(Cmint.Util.debug('deactivated component "'+Cmint.App.activeComponent.config.name+'"'),Cmint.Bus.$emit("closeActionBar"));s||Cmint.Bus.$emit("closeCategoryList"),a||Cmint.Bus.$emit("closeFieldChoice"),c||Cmint.Bus.$emit("closeDropdown")}})},Cmint.Ui.refreshComponentList=function(){$(Cmint.Settings.id.components).css({opacity:0}),setTimeout(function(){$(".thumbnail-scale-wrap").each(function(){$(this).parent().attr("style",null);var t=$(this).parent().height();t=t+34-36,t/=2,$(this).parent().height(t)}),$(Cmint.Settings.id.components).animate({opacity:1},400)},300)},Cmint.Ui.removeComponent=function(){var t=Cmint.App.activeComponent,n=Cmint.Sync.getVmContextData(t.config.index,Cmint.App.stage);n.context.splice(n.index,1),Vue.nextTick(Cmint.Drag.updateContainers),Vue.nextTick(Cmint.App.snapshot),Cmint.Bus.$emit("closeActionBar"),Cmint.Util.debug('removed "'+t.config.name+'" ['+t.config.index+"]"),Cmint.App.save()},Cmint.Fields.assignUid=function(t){var n;if(t.config.fields&&"stage"===t.environment&&!t.config.fields.uid||t.config.copy){for(n=Cmint.Util.uid(12);Cmint.Fields.UIDS.hasOwnProperty(n);)n=Cmint.Util.uid(12);t.config.fields.uid=n,Cmint.Util.debug('assigned field uid "'+n+'" to component at ['+t.config.index+"]"),t.config.copy&&(t.config.copy=!1)}t.config.fields.uid&&(Cmint.Fields.UIDS.hasOwnProperty(n)&&(t.config.fields.uid=Cmint.Util.uid(12)),Cmint.Fields.UIDS[t.config.fields.uid]=t)},Cmint.Fields.processFieldText=function(t){var n=t.fields[t.field.name],e=t.field.inputs[n.input],i=t.component.fields.uid,o=Cmint.Fields.UIDS[i];o.config.tokens&&(e=Cmint.Fields.tokenize(e,o.config)),t.field.check&&""!==e&&(t.pass=!!e.match(t.field.check),Cmint.Util.debug("field passed - "+t.pass)),t.field.processes&&t.field.processes.forEach(function(t){e=Cmint.Instance.Fields.Processes[t](e),Cmint.Util.debug('ran "'+t+'" field process')}),o.config.fields.output[t.field.result]=e},Cmint.Fields.setOutputWatch=function(t){t.config.tokens&&(t.$options.watch={},t.config.tokens.forEach(function(n){var e=n[Object.keys(n)[0]];t.$watch(function(){if(t.config.fields)return t.config.fields.output[e]},function(t,n){Cmint.Bus.$emit("outputUpdate",e)})}))},Cmint.Fields.tokenize=function(t,n){var e=t;return n.tokens&&e?(n.tokens.forEach(function(t){var i,o,s=Object.keys(t)[0],a=t[s],c=new RegExp("\\{\\{\\s*"+s+"\\s*\\}\\}","g");n.content&&n.content[a]?i=n.content[a].replace(/<.+?>/g,""):n.fields.output[a]?i=n.fields.output[a]:n.fields.list.forEach(function(t){i=t.inputs[a]||i}),i=i||"",(o=e.match(c))&&(e=e.replace(c,i),Cmint.Util.debug("tokenized {{ "+s+" }} => "+i))}),e):e},Cmint.Fields.watchOutputUpdates=function(t){t.$bus.$on("outputUpdate",function(n){n!==t.field.result&&t.process()})},Cmint.Hooks.runComponentHooks=function(t,n,e){var i=Cmint.Instance.Hooks.Local,o=Cmint.Instance.Hooks.Global;for(var s in o)o[s][t]&&(o[s][t](n,e),Cmint.Util.debug('ran global component hook "'+s+'" on event "'+t+'"'));e.hooks&&e.hooks.forEach(function(o){i.hasOwnProperty(o)&&i[o][t]&&(i[o][t](n,e),Cmint.Util.debug('ran local component hook "'+o+'" on event "'+t+'" for '+e.name))})},Vue.component("field-text",{props:["field","component"],template:'        <div class="field-instance">            <label>{{ field.label }}</label>            <div class="field-input-wrap">                <input type="text" v-model="field.inputs[fields[field.name].input]" @input="process()" />                <div class="field-help" v-if="field.help" :style="check">{{ field.help }}</div>            </div>        </div>',data:function(){return{fields:Cmint.Instance.Fields.List,pass:!0}},computed:{check:function(){return this.pass?{color:"rgba(0,0,0,0.4)"}:{color:"#E57373"}}},methods:{process:_.debounce(function(){Cmint.Fields.processFieldText(this)},500)},beforeMount:function(){Cmint.Fields.watchOutputUpdates(this)},mounted:function(){var t=this;Cmint.Fields.processFieldText(t),Cmint.Bus.$on("fieldProcessing",function(){Cmint.Fields.processFieldText(t),Cmint.Util.debug('processed field "'+t.field.name+'" after tinymce editing')}),Cmint.Util.debug('mounted <field> "'+this.field.name+'"')}}),Vue.component("field-dropdown",{props:["field","component"],template:'        <div class="field-instance">            <label>{{ field.label }}</label>            <div :class="{dropdown:true, active:toggle}">                <button @click="toggle = !toggle">                    <span>{{ selected }}</span><i :class="chevron"></i>                </button>                <div class="dropdown-list">                    <button v-for="(item, key) in menu"                            v-text="key"                            @click="process(key); toggle = !toggle"></button>                </div>            </div>        </div>',data:function(){return{fields:Cmint.Instance.Fields.List,menu:Cmint.Instance.Menus[this.field.menu],selected:"Default",toggle:!1}},computed:{chevron:function(){return{fa:!0,"fa-chevron-left":!this.toggle,"fa-chevron-down":this.toggle}}},methods:{process:function(t){var n=Cmint.Instance.Menus,e=Cmint.Instance.Fields.List,i=Cmint.Instance.Fields.Processes,o=n[this.field.menu][t];this.field.processes&&this.field.processes.forEach(function(t){o=i[t](o,this.component,this.field)}),this.field.inputs[e[this.field.name].input]=t,this.selected=t,this.component.fields.output[this.field.result]=o}},beforeMount:function(){this.selected=this.field.inputs[this.fields[this.field.name].input]||"Default",this.process(this.selected)},mounted:function(){var t=this;t.$bus.$on("closeDropdown",function(){t.toggle=!1})}}),Vue.component("field-group",{props:["field","component"],template:'        <div class="field-instance">            <label>{{ field.label }}</label>            <div class="field-group-wrap">                <div class="field-group-input" v-for="(inp, key) in field.inputs">                    <label>{{ firstUppercase(key) }}</label>                    <input type="text" v-if="inp.type === \'input\'"                        v-model="field.inputs[key].value"                        @keyup="process()"                        :placeholder="inp.label" />                    <textarea v-else-if="inp.type === \'textarea\'"                        v-model="field.inputs[key].value"                        @keyup="process()"                        :placeholder="inp.label"></textarea>                </div>            </div>        </div>',data:function(){return{fields:Cmint.Instance.Fields.List}},methods:{process:function(){var t,n=this.component.fields.uid,e=this,i=Cmint.Instance.Fields.Processes;e.field.processes?e.field.processes.forEach(function(o){t=i[o](e.field.inputs,Cmint.Fields.UIDS[n].config)}):console.error("Field groups must have associated processes"),Cmint.Fields.UIDS[n].config.fields.output[this.field.result]=t},firstUppercase:function(t){return t.charAt(0).toUpperCase()+t.replace(/^./,"")}},beforeMount:function(){Cmint.Fields.watchOutputUpdates(this)},mounted:function(){var t=this;Cmint.Bus.$on("fieldProcessing",function(){t.process(),Cmint.Util.debug('processed field "'+t.field.name+'" after tinymce editing')})}}),Vue.component("field-choice",{props:["field","component"],template:'        <div class="field-instance field-choice-container">            <label class="field-choice-label">{{ field.label }}</label>            <div :class="{\'field-choice-wrap\':true, active: toggle}">                <div class="field-selected" @click="toggle = !toggle">                    <span>{{ selected }}</span><i :class="chevron"></i>                </div>                <div class="field-choices">                    <div v-for="choice in field.choices"                         v-text="displayName(choice)"                         @click="process(choice)"></div>                </div>            </div>            <div class="field-selected-field-wrap" v-if="selected !== \'None\'">                <field :field="selectionData" :component="component"></field>            </div>        </div>',data:function(){return{toggle:!1,fields:Cmint.Instance.Fields.List,selected:this.field.selected||"None",selectionData:this.field.selectionData||null,selectedFieldData:this.field.selectedFieldData||null}},computed:{chevron:function(){return{fa:!0,"fa-chevron-left":!this.toggle,"fa-chevron-down":this.toggle}}},methods:{displayName:function(t){return"None"===t?"None":this.fields[t.name].display},process:function(t){var n=this,e=Cmint.Instance.Fields.List;n.toggle=!1,n.selectionData=null,n.selectedFieldData=null,n.selected="None",n.field.selected=n.selected,n.field.selectionData=n.selectionData,n.field.selectedFieldData=n.selectedFieldData,Vue.nextTick(function(){if("None"!==t){var i=Cmint.Util.copyObject(t);i.result=n.field.result,n.selectionData=i,n.selectedFieldData=e[n.selectionData.name],n.selected=n.selectedFieldData.display,n.field.selected=n.selected,n.field.selectionData=n.selectionData,
n.field.selectedFieldData=n.selectedFieldData}Cmint.Util.debug("field chosen: "+n.selected)})}},mounted:function(){var t=this;this.$bus.$on("closeFieldChoice",function(){t.toggle=!1})},beforeMount:function(){"None"!==this.field.choices[0]&&this.field.choices.splice(0,0,"None")}}),Vue.component("field",{props:["field","component"],template:'        <div class="field-wrap">            <component :is="field.type" :field="field" :component="component"></component>        </div>',beforeMount:function(){var t=this.component.fields.output[this.field.result],n=Cmint.Instance.Fields.List[this.field.name];if(this.field.label=n.label,this.field.type=n.type,this.field.display=n.display,this.field.menu=n.menu||null,this.field.choices=n.choices||null,this.field.help=n.help||null,this.field.check=n.check||null,this.field.processes=n.processes||null,!this.field.inputs&&(this.field.inputs={},"field-text"===this.field.type&&(this.field.inputs[n.input]=t),"field-dropdown"===this.field.type&&(this.field.inputs[n.input]="Default"),"field-group"===this.field.type)){if(!this.field.processes)throw"ERROR at "+this.field.name+": All field-group fields must have an associated processes";var e=this.field.inputs;n.input.forEach(function(t){e[t.name]={label:t.label,type:t.type,value:""}})}}}),Vue.component("fields",{props:["component","mountonly"],template:'        <div :class="wrapClasses">            <div class="fields-top">                <button class="fields-close-btn" @click="close">                    <i class="fa fa-chevron-left"></i>Done                </button>                <div class="fields-header">{{ component.display }}</div>                <div class="field-tokens" v-if="component.tokens">                    <i class="fa fa-question-circle-o"></i>                    <span>Tokens: </span><span class="token-wrap" v-html="tokens"></span>                </div>            </div>            <div class="field-list">                <field v-for="field in component.fields.list" :field="field" :component="component" :key="field.id"></field>            </div>        </div>',data:function(){return{isActive:!1}},computed:{wrapClasses:function(){return{cmint:!0,"fields-container":!0,active:this.isActive}},tokens:function(){return this.component.tokens.map(function(t){return"<span>{{ "+Object.keys(t)[0]+" }}</span>"}).join(", ")}},methods:{open:function(t){var n=this;t?setTimeout(function(){Cmint.App.fieldsComponent=null}):setTimeout(function(){n.isActive=!0},50)},close:function(){var t=this;setTimeout(function(){t.isActive=!1,Cmint.Bus.$emit("toggleOverlay",!1),setTimeout(function(){Cmint.App.fieldsComponent=null,Vue.nextTick(Cmint.App.snapshot),Cmint.App.save()},200),Cmint.Util.debug("closed field wiget")},50)}},mounted:function(){this.mountonly?Cmint.Util.debug('only mounting field component "'+this.component.name+'"'):(this.open(),Cmint.Util.debug('opened fields for "'+this.component.name+'"'))}}),Cmint.Drag.fn=function(){function t(){$(Cmint.Settings.id.stage+" "+Cmint.Settings.class.context).each(function(){Cmint.Drag.drake.containers.indexOf(this)<=-1&&(Cmint.Drag.drake.containers.push(this),Cmint.Util.debug("added container to drake.containers"))})}function n(){var t='<div class="'+Cmint.Settings.name.placeholder+'" style="display:none;"></div>';"prepend"===Cmint.Drag.dragInsertType?$(Cmint.Drag.dragPosition).prepend(t):"after"===Cmint.Drag.dragInsertType&&$(t).insertAfter(Cmint.Drag.dragPosition)}function e(t){$(Cmint.Settings.class.placeholder).replaceWith(t)}return{updateContainers:t,insertPlaceholder:n,replacePlaceholder:e}}(),Cmint.Drag.onDrag=function(t,n){Cmint.Bus.$emit("closeActionBar"),n===Cmint.Drag.components&&(Cmint.Drag.dragFromComponents=!0,Cmint.Drag.dragIndex=Cmint.Sync.getStagePosition(t),Cmint.Drag.dragData=Cmint.Sync.getComponentData(Cmint.Drag.dragIndex,Cmint.Ui.componentList),Cmint.Util.debug("dragging from component list at ["+Cmint.Drag.dragIndex+"]")),$(n).closest(Cmint.Settings.id.stage).length&&(Cmint.Drag.dragFromComponents=!1,Cmint.Drag.dragIndex=Cmint.Sync.getStagePosition(t),Cmint.Drag.dragData=Cmint.Sync.getComponentData(Cmint.Drag.dragIndex,Cmint.App.stage),Cmint.Drag.dragVmContextData=Cmint.Sync.getVmContextData(Cmint.Drag.dragIndex,Cmint.App.stage),0===$(t).prev().length?(Cmint.Drag.dragInsertType="prepend",Cmint.Drag.dragPosition=$(t).parent()):(Cmint.Drag.dragInsertType="after",Cmint.Drag.dragPosition=$(t).prev()),Cmint.Util.debug("dragging from stage at ["+Cmint.Drag.dragIndex+"]"),Cmint.Util.debug('drag insert type is "'+Cmint.Drag.dragInsertType+'"'))},Cmint.Drag.onDrop=function(t,n,e,i){var o,s,a,c,l=$(t),m=$(n),r=$(e);Cmint.Drag.dropInContext=m.closest(Cmint.Settings.class.context).length>0,Cmint.Drag.dropReordered=r.closest(Cmint.Settings.id.stage).length>0,Cmint.Drag.dragFromComponents&&Cmint.Drag.dropInContext&&(Cmint.Drag.dropIndex=Cmint.Sync.getStagePosition(t),l.remove(),Cmint.Sync.insertVmContextData(Cmint.Drag.dropIndex,Cmint.Drag.dragData,Cmint.App.stage),Vue.nextTick(Cmint.App.refresh),Vue.nextTick(Cmint.Drag.fn.updateContainers),Vue.nextTick(Cmint.App.snapshot),Cmint.Util.debug('dropped new component "'+Cmint.Drag.dragData.name+'" in stage at ['+Cmint.Drag.dropIndex+"]"),Cmint.App.save()),Cmint.Drag.dropReordered&&(Cmint.Drag.fn.insertPlaceholder(),Cmint.Drag.dropIndex=Cmint.Sync.getStagePosition(t),Cmint.Util.debug("dropped reordered component at ["+Cmint.Drag.dropIndex+"]"),Cmint.Drag.fn.replacePlaceholder(t),Cmint.Util.debug("replaced placeholder with dropped element"),Cmint.Drag.dropVmContextData=Cmint.Sync.getVmContextData(Cmint.Drag.dropIndex,Cmint.App.stage),o=Cmint.Drag.dragVmContextData,s=Cmint.Drag.dropVmContextData,s.context==o.context&&(a=o.index,c=s.index,a<c&&(s.index=s.index-1),Cmint.Util.debug("reordered components in the same context")),Cmint.Sync.rearrangeVmContextData(o,s),Vue.nextTick(Cmint.App.refresh),Vue.nextTick(Cmint.Drag.updateContainers),Vue.nextTick(Cmint.App.snapshot),Cmint.App.save())},Cmint.Drag.onRemove=function(t,n,e){$(e).closest(Cmint.Settings.id.stage).length&&(Cmint.Drag.fn.insertPlaceholder(),Cmint.Drag.fn.replacePlaceholder(t),$(t).removeClass("gu-hide"),Cmint.Util.debug('removed component "'+Cmint.Drag.dragData.name+'" from stage at '+Cmint.Drag.dragData.index),Cmint.Sync.removeVmContextData(Cmint.Drag.dragVmContextData),Vue.nextTick(Cmint.App.refresh),Vue.nextTick(Cmint.App.save),Vue.nextTick(Cmint.App.snapshot))},Cmint.Drag.init=function(){Cmint.Drag.stage=$(Cmint.Settings.id.stage)[0],Cmint.Drag.components=$(Cmint.Settings.id.components)[0],Cmint.Drag.dragIndex=null,Cmint.Drag.dragData=null,Cmint.Drag.dragPosition=null,Cmint.Drag.dragFromComponents=null,Cmint.Drag.dragVmContextData=null,Cmint.Drag.dropInsertType=null,Cmint.Drag.dropIndex=null,Cmint.Drag.dropInContext=null,Cmint.Drag.dropReordered=null,Cmint.Drag.dropVmContextData=null,Cmint.Drag.config={copy:function(t,n){return n===Cmint.Drag.components},accepts:function(t,n,e,i){return n!==Cmint.Drag.components&&!Cmint.Util.contains(t,n)}},Cmint.Drag.drake=dragula([Cmint.Drag.stage,Cmint.Drag.components],Cmint.Drag.config),Cmint.Drag.drake.on("drag",function(t,n){Cmint.Drag.onDrag(t,n)}),Cmint.Drag.drake.on("drop",function(t,n,e,i){Cmint.Drag.onDrop(t,n,e,i)}),Cmint.Drag.drake.on("remove",function(t,n,e){Cmint.Drag.onRemove(t,n,e)})},Cmint.AppFn.checkCustomName=function(t){var n="pass";return""===t.name?(t.nameError="Name field is blank",t.hasError=!0,"blank"):(Cmint.App.components.forEach(function(e){e.display===t.name&&(n="fail")}),n)},Cmint.AppFn.compSetup=function(t){t.custom=t.custom||!1,t.originalDisplay=t.originalDisplay||t.display,t.originalCategory=t.originalCategory||t.category,t.markup=t.markup||""},Cmint.AppFn.createCustomComponent=function(t){t.hasError=!1;var n,e=Cmint.AppFn.checkCustomName(t),i=Cmint.App.activeComponent;Cmint.App.customComponents||(Cmint.App.customComponents=[]),"blank"!==e&&("pass"===e?(i.config.display=t.name,i.config.category=t.category||"Custom",i.config.custom=!0,n=Cmint.Util.copyObject(i.config),Cmint.App.components.push(n),Cmint.App.customComponents.push(n),Cmint.App.save(),i.config.category===Cmint.App.selectedCategory&&Cmint.Bus.$emit("updateComponentList",n),Cmint.Util.debug('added "'+t.name+'" ('+t.category+') in template "'+Cmint.App.templateName+'"'),Cmint.AppFn.notify('Custom component "'+t.name+'" added!'),t.closeCustom()):(t.nameError='"'+t.name+'" already exists',t.name="",t.hasError=!0))},Cmint.AppFn.deleteCustomComponent=function(t){var n=Cmint.App.activeComponent,e=n.config.display;n.config.display=n.config.originalDisplay,n.config.category=n.config.originalCategory,n.config.custom=!1,Cmint.AppFn.replaceIndexIf(Cmint.App.components,null,function(n){return console.log(t.name),n.display===t.name},"remove"),Cmint.AppFn.replaceIndexIf(Cmint.App.customComponents,null,function(n){return n.display===t.name},"remove"),Cmint.Bus.$emit("deleteCustomComponent",e),Cmint.Bus.$emit("selectCategory","All"),Cmint.App.save(),Cmint.Util.debug('deleted custom component "'+t.name+'" in template "'+Cmint.App.templateName+'"'),Cmint.AppFn.notify('Custom component "'+t.name+'" deleted'),t.closeCustom()},Cmint.AppFn.getComponentMarkup=function(t){var n=$(t.$el),e=n.clone(),i=$("<div></div>");e.appendTo(i),Cmint.Hooks.runComponentHooks("cleanup",e[0],t.config),i.find(Cmint.Settings.attr.dataEdit).removeAttr(Cmint.Settings.name.dataEdit),i.find(Cmint.Settings.attr.dataTemp).removeAttr(Cmint.Settings.name.dataTemp),i.find("[contenteditable]").removeAttr("contenteditable"),i.find("[spellcheck]").removeAttr("spellcheck"),i.find(Cmint.Settings.class.component).removeClass(Cmint.Settings.name.component+" active"),i.find(".mce-content-body").removeClass("mce-content-body"),i.find("[id]").each(function(){$(this).attr("id").match(/^mce_\d+/)&&$(this).removeAttr("id")}),i.find("[class]").each(function(){""===$(this).attr("class")&&$(this).removeAttr("class")});var o=i.html();Cmint.Hooks.runComponentHooks("markup",o,t.config),Cmint.Util.debug('got markup for component "'+t.config.name+'"')},Cmint.AppFn.getTemplateComponents=function(t){var n=[];return Cmint.Instance.Templates[t].components.forEach(function(t){var e=Cmint.Util.copyObject(Cmint.Instance.Components[t]);n.push(e)}),n},Cmint.AppFn.mergeCustomComponents=function(t){t.customComponents.length>0&&(t.components=t.components.concat(t.customComponents),Cmint.Bus.$emit("updateComponentList",t.components))},Cmint.AppFn.notify=function(t){var n=$(Cmint.Settings.class.notification);n.text(t),n.addClass("active"),setTimeout(function(){n.removeClass("active")},2500)},Cmint.AppFn.refresh=function(){this.stage=Cmint.Util.copyObject(this.stage)},Cmint.AppFn.replaceIndexIf=function(t,n,e,i){var o=null;t.forEach(function(t,n){e(t)&&(o=n)}),null!==o&&("remove"===i?t.splice(o,1):t.splice(o,1,n))},Cmint.AppFn.save=function(){var t=this;setTimeout(function(){Cmint.Bus.$emit("updateEditorData"),t.saved=Cmint.Util.copyObject(t.stage),t.markup=Cmint.getMarkup(),Cmint.Hooks.onSaveHook({template:Cmint.App.template,contentName:Cmint.App.contentName,username:Cmint.App.username,saved:Cmint.App.saved,customComponents:Cmint.App.customComponents,markup:Cmint.App.markup}),Cmint.AppFn.notify('Saved "'+Cmint.App.contentName+'"'),Cmint.Util.debug("content saved")},300)},Cmint.AppFn.snapshot=function(){this.changes++;var t=Cmint.Util.copyObject(this.stage);Cmint.Util.debug("took project snapshot (changes: "+this.changes+")"),this.previous?this.previous={snapshot:t,prior:this.previous}:this.previous={snapshot:t,prior:{snapshot:[],prior:null}},Cmint.Bus.$emit("toolbarDisabler",!this.changes)},Cmint.AppFn.undo=function(){this.previous&&(this.changes--,this.stage=this.previous.prior.snapshot,Vue.nextTick(Cmint.Drag.updateContainers),this.previous=this.previous.prior,this.previous.prior||(this.previous=null),Cmint.Util.debug("state reverted (current changes: "+this.changes+")"),Cmint.App.save()),Cmint.Bus.$emit("toolbarDisabler",!this.changes)},Cmint.AppFn.updateCustomComponent=function(t){t.hasError=!1;var n,e=Cmint.AppFn.checkCustomName(t),i=Cmint.App.activeComponent,o=i.config.display;"blank"!==e&&(i.config.oldCustomName=o,i.config.display=t.name,i.config.category=t.category||"Custom",n=Cmint.Util.copyObject(i.config),Cmint.AppFn.replaceIndexIf(Cmint.App.components,n,function(t){return t.display===o}),Cmint.AppFn.replaceIndexIf(Cmint.App.customComponents,n,function(t){return t.display===o}),i.config.category===Cmint.App.selectedCategory&&Cmint.Bus.$emit("selectCategory",Cmint.App.selectedCategory),Cmint.Bus.$emit("updateCustom",n),Cmint.App.save(),Cmint.Util.debug('updated custom component "'+t.name+'" in template "'+Cmint.App.templateName+'"'),Cmint.AppFn.notify('Custom component "'+t.name+'" updated'),t.closeCustom())},Cmint.AppFn.updateStageCustomComponents=function(t){t.config.custom&&"stage"===t.environment&&Cmint.Bus.$on("updateCustom",function(n){t.config.display===n.oldCustomName&&(Cmint.Util.debug("updated staged custom component"),vmData=Cmint.Sync.getVmContextData(t.config.index,Cmint.App.stage),vmData.context.splice(vmData.index,1,Cmint.Util.copyObject(n)))})},Cmint.Util.runTests(),Cmint.Init=function(){Cmint.Instance.Data=JSON.parse($("#Data").text());var t=Cmint.Instance.Data.template;$.get(Cmint.Instance.Templates[t].path,function(n){Cmint.App=new Vue({el:"#App",data:{templateMarkup:n,template:Cmint.Instance.Data.template,templateName:Cmint.Instance.Data.template,username:Cmint.Instance.Data.username,contentName:Cmint.Instance.Data.contentName,customComponents:Cmint.Instance.Data.customComponents,markup:"",stage:Cmint.Instance.Data.saved,components:Cmint.AppFn.getTemplateComponents(t),activeComponent:null,fieldsComponent:null,fieldsMountOnly:!1,componentList:null,selectedCategory:"All",contextualize:!1,changes:0,previous:null,saved:[]},methods:{save:Cmint.AppFn.save,snapshot:Cmint.AppFn.snapshot,undo:Cmint.AppFn.undo,refresh:Cmint.AppFn.refresh},created:function(){Cmint.AppFn.mergeCustomComponents(this)},mounted:function(){var t=this;Cmint.Bus.$on("callComponentFields",function(){t.fieldsComponent=t.activeComponent.config}),Cmint.Ui.documentHandler(),Cmint.Ui.contextualize(),Cmint.Bus.setSelectedCategory(this),Cmint.Drag.init(),Cmint.Util.debug("mounted application")}})})};